---
#
# Revised to follow the docker compose v2 file specification
# (not to be confused with compose v1 and Version 1, Version2,
# or Version 3 file formats).

# Original notes below
# Derived from example provided by Tony Lawrence - see
# http://tonylawrence.com/posts/unix/synology/free-your-synology-ports/
#
# Extended to include multiple services using a separate macvlan
# Macvlan provides unique IP addresses for each container.
#
# ipam configuration options used in the macvlan below
# e.g. aux_addresses are not available in docker-compose
# version 3.x at this time so this compose file needs to use
# the 2.x format.

# name: lan_services

# include attribute available in compose 2.20 and newer
# include:
#  - ./services/registry.yaml
#  - ./services/pihole.yaml
#  - ./services/unifi.yaml

services:
  registry:      # Docker registry server for local development
    container_name: Registry
    restart: unless-stopped
    image: registry:2
    hostname: reg
    domainname: lan
    networks:
      macvlan1:
        ipv4_address: 192.168.110.210
    ports:
      - 443/tcp
      - 443/udp
    volumes:
      - /volume1/docker/registry:/var/lib/registry
      - /volume1/docker/registry/certs:/certs
      - /volume1/docker/registry/auth:/auth
    environment:
      REGISTRY_HTTP_ADDR: 0.0.0.0:443
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      REGISTRY_HTTP_TLS_KEY: /certs/domain.key
      REGISTRY_AUTH: htpasswd
      REGISTRY_AUTH_HTPASSWD_PATH: /auth/htpasswd
      REGISTRY_AUTH_HTPASSWD_REALM: Registry Realm

  # v5 pihole
  pihole:     # Pi Hole dns server for local network
    container_name: Pi-Hole
    image: pihole/pihole:2024.07.0
    hostname: pihole
    domainname: lan
  #  depends_on:   - doh-client no longer used
  #    - doh-client
    cap_add:
      - NET_ADMIN
    networks:
      macvlan1:
        ipv4_address: 192.168.110.201
    volumes:
      - '/volume1/docker/pihole/pihole-configs:/etc/pihole/'
      - '/volume1/docker/pihole/dnsmasq.d-configs:/etc/dnsmasq.d/'
    dns:
      - 127.0.0.1
      - 8.8.8.8
    ports:
      - 443/tcp
      - 53/tcp
      - 53/udp
      - 67/udp
      - 80/tcp
    environment:
      ServerIP: 192.168.110.201
      VIRTUAL_HOST: pihole.lan
      WEBPASSWORD: pihole_webpasswd
      TZ: 'America/Los_Angeles'
    secrets:
      - pihole_webpasswd
    restart: unless-stopped

  # v6 pihole
  piholev6:     # Pi Hole dns server for local network
    container_name: Pi-Hole-V6
    image: pihole/pihole:latest
    hostname: pihole
    domainname: lan
  #  depends_on:   - doh-client no longer used
  #    - doh-client
    cap_add:
      - NET_ADMIN
    networks:
      macvlan1:
        ipv4_address: 192.168.110.202
    volumes:
      - '/volume1/docker/piholev6/pihole-configs:/etc/pihole/'
      - '/volume1/docker/piholev6/dnsmasq.d-configs:/etc/dnsmasq.d/'
    ports:
      - 443/tcp
      - 53/tcp
      - 53/udp
      - 67/udp
      - 80/tcp
    environment:
      FTLCONF_webserver_api_password: pihole_webpasswd
      TZ: 'America/Los_Angeles'
    secrets:
      - pihole_webpasswd
    restart: unless-stopped

#  10 Feb 2025 - doh client replaced by pfsense and DOT
#  doh-client:     # DOH Client for local network
#    container_name: DOH-Client
#    image: buckaroogeek/doh-client:2.2.20
#    hostname: dohclient
#    domainname: lan
#    cap_add:
#      - NET_ADMIN
#    networks:
#      macvlan1:
#        ipv4_address: 192.168.110.203
#    command: ["-conf=/etc/dns-over-https/doh-client.conf"]
#    volumes:
#      - /volume1/docker/dohclient:/etc/dns-over-https
#    ports:
#      - 53/tcp
#      - 53/udp
#      - 5380/tcp
#    restart: unless-stopped

  unifi:
    image: "buckaroogeek/unifi:v9"
    container_name: Unifi-Network-Application
    hostname: unifi2
    domainname: lan
    depends_on:
      - mongo
    init: true
    networks:
      macvlan1:
        ipv4_address: 192.168.110.216
      unifibridge1:
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /volume1/docker/unifi2:/unifi
      - /volume1/docker/unifi2/run:/var/run/unifi
    environment:
      DB_URI: mongodb://mongo/unifi
      STATDB_URI: mongodb://mongo/unifi_stat
      DB_NAME: unifi
      TZ: America/Los_Angeles
      UNIFI_HTTP_PORT: 80
      UNIFI_HTTPS_PORT: 443
    ports:
      - "1900/udp"    # L2 discovery
      - "3478/udp"    # STUN
      - "6789/tcp"    # Speed test
      - "80/tcp"      # Device/ controller comm.
      - "443/tcp"     # Controller GUI/API as seen in a web browser
      - "8880/tcp"    # HTTP portal redirection
      - "8843/tcp"    # HTTPS portal redirection
      - "10001/udp"   # AP discovery
      - "27117/tcp"   # DB communications

  mongo:
    image: mongo:4.4
    container_name: MongoDB
    networks:
      unifibridge1:
    restart: unless-stopped
    volumes:
      - /volume1/docker/mongo/db:/data/db
      - /volume1/docker/mongo/dbcfg:/data/configdb

  logs:
    image: bash
    container_name: Unifi-Logs
    networks:
      unifibridge1:
    depends_on:
      - unifi
    command: bash -c 'tail -F /unifi/log/*.log'
    restart: unless-stopped
    volumes:
      - /volume1/docker/unifi2/log:/unifi/log

  forgejo:
    image: codeberg.org/forgejo/forgejo:10
    container_name: Forgejo
    environment:
      - USER_UID=1000
      - USER_GID=1000
    restart: unless-stopped
    networks:
      macvlan1:
        ipv4_address: 192.168.110.212
    volumes:
      - /volume1/docker/forgejo:/data
      - /etc/TZ:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - '3000'
      - '22'

  caddy:
    image: caddy:latest
    container_name: Caddy
    restart: unless-stopped
    networks:
      macvlan1:
        ipv4_address: 192.168.110.214
    cap_add:
      - NET_ADMIN
    ports:
      - '80'
      - '443'
      - '443/udp'
    volumes:
      - /volume1/docker/caddy/etc:/etc/caddy
      - /volume1/docker/caddy/site:/srv
      - /volume1/docker/caddy/data:/data
      - /volume1/docker/caddy/config:/config

networks:
  macvlan1:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.110.0/24
          gateway: 192.168.110.1
          ip_range: 192.168.110.192/26
          aux_addresses:
            -host: 192.168.110.193
  unifibridge1:
    driver: bridge

secrets:
  pihole_webpasswd:
    file: pihole_password.txt
...
