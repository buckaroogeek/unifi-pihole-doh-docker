---
# Derived from example provided by Tony Lawrence - see
# http://tonylawrence.com/posts/unix/synology/free-your-synology-ports/
#
# Extended to include multiple services using a separate macvlan
# Macvlan provides unique IP addresses for each container.
#

# ipam configuration options used in the macvlan below
# e.g. aux_addresses are not available in docker-compose
# version 3.x at this time so this compose file needs to use
# the 2.x format.

version: '2.4'

services:
  pihole:     # Pi Hole dns server for local network
    container_name: SageCreek-Pi-Hole
    image: pihole/pihole:latest
    hostname: pihole
    domainname: lan             # <-- Update
    cap_add:
      - NET_ADMIN
    networks:
      macvlan1:
        ipv4_address: 192.168.110.201   # Â <-- Update
    volumes:
      - '/volume1/docker/pihole/pihole-configs:/etc/pihole/'
      - '/volume1/docker/pihole/dnsmasq.d-configs:/etc/dnsmasq.d/'
    dns:
      - 127.0.0.1
      - 8.8.8.8
    ports:
      - 443/tcp
      - 53/tcp
      - 53/udp
      - 67/udp
      - 80/tcp
    environment:
      ServerIP: 192.168.110.201       # <-- match ipv4_address
      VIRTUAL_HOST: pihole.lan        # <-- match hostname + domainname
      WEBPASSWORD: "xxxxx"   # <-- Add password
      TZ: 'America/Los_Angeles'
    restart: unless-stopped
  doh-client:     # DOH Client for local network
    container_name: SageCreek-DOH-Client
    image: buckaroogeek/doh-client:2.2.17
    hostname: dohclient
    domainname: lan
    cap_add:
      - NET_ADMIN
    networks:
      macvlan1:
        ipv4_address: 192.168.110.203
    command: ["-conf=/etc/dns-over-https/doh-client.conf"]
    volumes:
      - /volume1/docker/dohclient:/etc/dns-over-https
    ports:
      - 53/tcp
      - 53/udp
      - 5380/tcp
    restart: unless-stopped
  registry:      # Docker registry server for local development
    container_name: SageCreek-Registry
    restart: always
    image: registry:2
    hostname: reg
    domainname: lan
    networks:
      macvlan1:
        ipv4_address: 192.168.110.210
    ports:
      - 443/tcp
      - 443/udp
    volumes:
      - /volume1/docker/registry:/var/lib/registry
      - /volume1/docker/registry/certs:/certs
    environment:
      REGISTRY_HTTP_ADDR: 0.0.0.0:443
      REGISTRY_HTTP_TLS_CERTIFICATE: /certs/domain.crt
      REGISTRY_HTTP_TLS_KEY: /certs/domain.key
  mongo:
    image: mongo:3.6
    container_name: SageCreek-Mongo
    networks:
      macvlan1:
        ipv4_address: 192.168.110.215
    restart: unless-stopped
    volumes:
      - /volume1/docker/mongo/db:/data/db
      - /volume1/docker/mongo/dbcfg:/data/configdb
  unifi:
    image: "buckaroogeek/unifi:v8"
    #    image: "jacobalberty/unifi:v7"
    container_name: SageCreek-Unifi-Controller
    hostname: unifi2
    domainname: lan
    depends_on:
      - mongo
    init: true
    networks:
      macvlan1:
        ipv4_address: 192.168.110.216
    restart: unless-stopped
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /volume1/docker/unifi2:/unifi
      #      - /volume1/docker/unifi2/data:/unifi/data
      #      - /volume1/docker/unifi2/log:/unifi/log
      #      - /volume1/docker/unifi2/cert:/unifi/cert
      #      - /volume1/docker/unifi2/init.d:/unifi/init.d
      - /volume1/docker/unifi2/run:/var/run/unifi
    environment:
      DB_URI: mongodb://mongo/unifi
      STATDB_URI: mongodb://mongo/unifi_stat
      DB_NAME: unifi
      TZ: America/Los_Angeles
      UNIFI_HTTP_PORT: 80
      UNIFI_HTTPS_PORT: 443
      # RUNAS_UID0: false
      # UNIFI_UID: 1029
      # UNIFI_GID: 65537
    ports:
      - "1900/udp"    # L2 discovery
      - "3478/udp"    # STUN
      - "6789/tcp"    # Speed test
      - "80/tcp"      # Device/ controller comm.
      - "443/tcp"     # Controller GUI/API as seen in a web browser
      - "8880/tcp"    # HTTP portal redirection
      - "8843/tcp"    # HTTPS portal redirection
      - "10001/udp"   # AP discovery
      - "27117/tcp"   # DB communications
  logs:
    image: bash
    container_name: SageCreek-Unifi-Logs
    networks:
      macvlan1:
        ipv4_address: 192.168.110.217
    depends_on:
      - unifi
    command: bash -c 'tail -F /unifi/log/*.log'
    restart: always
    volumes:
      - /volume1/docker/unifi2/log:/unifi/log

networks:
  macvlan1:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.110.0/24            # <-- Update
          gateway: 192.168.110.1              # <-- Update
          ip_range: 192.168.110.192/26        # <-- Update
          aux_addresses:
            -host: 192.168.110.193
...
