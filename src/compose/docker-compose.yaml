# Derived from example provided by Tony Lawrence - see
# http://tonylawrence.com/posts/unix/synology/free-your-synology-ports/
#
# Extended to include multiple services using a separate macvlan
# Macvlan provides unique IP addresses for each container.
#

version: '2.2'

services:
  pihole:     #Pi Hole dns server for local network
    container_name: SageCreek-Pi-Hole
    image: pihole/pihole:latest
    hostname: pihole
    domainname: lan             # <-- Update
    mac_address: d0:ca:ab:cd:ef:01
    cap_add:
      - NET_ADMIN
    networks:
      macvlan1:
        ipv4_address: 192.168.110.201   #Â <-- Update
    volumes:
      - '/volume1/docker/pihole/pihole-configs:/etc/pihole/'
      - '/volume1/docker/pihole/dnsmasq.d-configs:/etc/dnsmasq.d/'
    dns:
      - 127.0.0.1
      - 8.8.8.8
    ports:
      - 443/tcp
      - 53/tcp
      - 53/udp
      - 67/udp
      - 80/tcp
    environment:
      ServerIP: 192.168.110.201 # <-- Update (match ipv4_address)
      VIRTUAL_HOST: pihole.lan  # <-- Update (match hostname + domainname)
      WEBPASSWORD: "quga5RHDI@" # <-- Add password (if required)
    restart: unless-stopped
  registry:      # Docker registry server for local development
    container_name: SageCreek-Registry
    restart: always
    image: registry:2
    hostname: reg
    domainname: lan
    mac_address: d0:ca:ab:cd:ef:10
    networks:
      macvlan1:
        ipv4_address: 192.168.110.210
    ports:
      - 5000/tcp
      - 5000/udp
    volumes:
      - /volume1/docker/registry:/var/lib/registry

networks:
  macvlan1:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      config:
        - subnet: 192.168.110.0/24            # <-- Update
          gateway: 192.168.110.1              # <-- Update
          ip_range: 192.168.110.192/26        # <-- Update
          aux_addresses:
            -host: 192.168.110.193

